generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        String   @id @default(cuid())
  title     String
  slug      String   @unique
  content   String?
  excerpt   String?
  filePath  String
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // 多对多关系：一个Post可以有多个Tag，一个Tag可以属于多个Post
  tags      PostTag[]
  
  @@map("posts")
}

model Tag {
  id        String   @id @default(cuid())
  name      String   @unique
  slug      String   @unique
  color     String?  // 可选的标签颜色
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // 多对多关系：一个Tag可以属于多个Post
  posts     PostTag[]
  
  @@map("tags")
}

// 中间表，用于Post和Tag的多对多关系
model PostTag {
  postId String
  tagId  String
  
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  tag    Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade)
  
  @@id([postId, tagId])
  @@map("post_tags")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("users")
} 